(()=>{"use strict";class t{constructor(t,s,e){this.name=t,this.html=s,this.default=e}isActiveRoute(t){const s=t.indexOf("#")+1;let e=t.indexOf("?")-1;return e=e<0?t.length:e,t.substr(s,e)===this.name}getParams(t){if(-1!==t.indexOf("?")){const s=t.split("?")[1].split("&"),e={};return s.forEach((t=>{const[s,a]=t.split("=");e[s]=a})),e}return{}}}class s{constructor(t,s,e,a,i,r,o){this.word=t,this.translation=s,this.category=e,this.urlImage=`assets/images/${a}`,this.urlAudio=`assets/audio/${i}`,this.mainColor=r,this.secondColor=o,this.isSoundOn=!0,this.isBack=!1,this.currentHoverCard=null,this.callback=null,this.isGameMode=!1,this.isActive=!0,this.createHtmlObject(),this.addListeners()}createHtmlObject(){this.htmlCard=document.createElement("div"),this.htmlCard.classList.add("cards__box-card"),this.htmlCard.innerHTML=` \n            <div class="cards__box-card-inner">\n              <div class="cards__box-card-inner-front" style="background-color: ${this.mainColor};">\n                <div class="cards__box-card-image">\n                  <img src="${this.urlImage}" alt="card">\n                </div>\n                <div class="cards__box-card-word">\n                  ${this.word}\n                </div>\n                <div class="cards__box-card-category" style="background-color: ${this.secondColor};">\n                  ${this.category}\n                </div>\n                <audio src="${this.urlAudio}" is_on="true"></audio>\n                <button class="cards__box-card-button" style="background-color: ${this.secondColor};">\n                  <img src="assets/images/rotate.png" alt="rotate">\n                </button>\n              </div>\n              <div class="cards__box-card-inner-back" style="background-color: ${this.mainColor};">\n                <div class="cards__box-card-image">\n                  <img src="${this.urlImage}" alt="card">\n                </div>\n                <div class="cards__box-card-word">\n                  ${this.translation}\n                </div>\n                <div class="cards__box-card-category" style="background-color: ${this.secondColor};">\n                  ${this.category}\n                </div>\n              </div>\n            </div>`,this.audio=this.htmlCard.querySelector("audio"),this.rotateButton=this.htmlCard.querySelector(".cards__box-card-button"),this.htmlBackCard=this.htmlCard.querySelector("cards__box-card-inner-back"),this.htmlWord=this.htmlCard.querySelector(".cards__box-card-word"),this.htmlImage=this.htmlCard.querySelector(".cards__box-card-image")}appendTo(t){t.appendChild(this.htmlCard)}addListeners(){this.rotateButton.onclick=this.rotateCard.bind(this),this.htmlCard.onmouseover=this.moveOverCard.bind(this),this.htmlCard.onmouseout=this.moveOutCard.bind(this),this.htmlCard.onclick=this.clickCard.bind(this)}rotateCard(){this.isBack?(this.htmlCard.classList.remove("cards__box-card-rotate"),this.isSoundOn=!0,this.isBack=!1):(this.htmlCard.classList.add("cards__box-card-rotate"),this.isSoundOn=!1,this.isBack=!0)}moveOverCard(t){if(this.currentHoverCard)return;const s=t.target.closest(".cards__box-card-rotate");s&&this.htmlCard.contains(s)&&(this.currentHoverCard=s)}moveOutCard(t){if(!this.currentHoverCard)return;let{relatedTarget:s}=t;for(;s;){if(s===this.currentHoverCard)return;s=s.parentNode}this.currentHoverCard=null,this.rotateCard()}clickCard(){this.playSound(),this.callback&&this.isActive&&this.callback(this.word)}playSound(){this.isSoundOn&&this.audio.play()}setIsSound(t){this.isSoundOn=t}setCallback(t){this.callback=t}deactivate(){this.htmlCard.classList.add("cards__box-card-deactive"),this.isActive=!1}activate(){this.htmlCard.classList.remove("cards__box-card-deactive"),this.isActive=!0}toggleMode(){this.isGameMode=!this.isGameMode,this.isGameMode?(this.rotateButton.classList.add("cards__box-card-button-hide"),this.rotateButton.disabled=!0,this.isSoundOn=!1,this.htmlWord.classList.add("cards__box-card-word-hide"),this.htmlImage.classList.add("cards__box-card-image-big")):(this.rotateButton.classList.remove("cards__box-card-button-hide"),this.rotateButton.disabled=!1,this.isSoundOn=!0,this.htmlWord.classList.remove("cards__box-card-word-hide"),this.htmlImage.classList.remove("cards__box-card-image-big"))}}const e=new class{constructor(){this.htmlElements={},this.keys=[],this.createDOM("page","div","card__page"),this.createDOM("main__nav","div","main__nav","","page"),this.createDOM("repeat_button","button","stats_repeat","repeat difficult words","main__nav"),this.htmlElements.repeat_button.addEventListener("click",(()=>{let t=Object.keys(this.words).filter((t=>this.words[t].wrong>0&&this.words[t].percent<100));t=t.sort(((t,s)=>this.words[t].percent>this.words[s].percent?1:-1)).splice(0,8),localStorage.setItem("repeat",JSON.stringify(t)),window.location="#cards?category=repeat"})),this.createDOM("reset_button","button","stats_reset","reset","main__nav"),this.htmlElements.reset_button.addEventListener("click",(()=>{localStorage.removeItem("stats"),this.keys=[],this.loadCards(),setTimeout(this.print.bind(this),1e3)})),this.createDOM("table_header","div","stats__table","","page"),["word","translation","category","trains","correct","wrong","percent"].forEach((t=>{this.createDOM(`header-${t}`,"div","stats__table-item__header",t,"table_header",{"min-max":"true",key:t}),this.htmlElements[`header-${t}`].addEventListener("click",(t=>{const s=t.target,e="true"===s.getAttribute("min-max"),a=s.getAttribute("key");s.setAttribute("min-max",!e),this.sortBy(a,e),this.print()}))})),this.createDOM("table_words","div","stats__table","","page"),this.loadCards()}createDOM(t,s,e="",a="",i=null,r={}){this.htmlElements[t]=document.createElement(s),this.htmlElements[t].classList.add(e),this.htmlElements[t].textContent=a;const o=Object.keys(r);o.length>0&&o.forEach((s=>{this.htmlElements[t].setAttribute(s,r[s])})),null!=i&&this.htmlElements[i].appendChild(this.htmlElements[t])}appendToPage(){document.querySelector(".container").appendChild(this.htmlElements.page)}loadPage(){this.print(),this.appendToPage()}clearTable(){const t=this.htmlElements.table_words;for(;t.firstChild;)t.removeChild(t.lastChild)}print(){this.clearTable(),this.keys.forEach((t=>{this.createDOM(void 0,"div","stats__table-item",t,"table_words"),["translation","category","trains","correct","wrong","percent"].forEach((s=>{this.createDOM(void 0,"div","stats__table-item",this.words[t][s],"table_words")}))}))}async loadCards(){const t=await fetch("assets/cards.json").then((t=>t.json())).then((t=>t)),s={};t.forEach((t=>{t.words.forEach((e=>{s[e.eng]={},s[e.eng].translation=e.rus,s[e.eng].category=t.category.replace("_"," "),s[e.eng].trains=0,s[e.eng].correct=0,s[e.eng].wrong=0,s[e.eng].percent=0}))})),this.words=s,this.keys=Object.keys(this.words),this.loadLocal(),this.sortBy("word"),this.print()}sortBy(t,s=!1){const e=s?-1:1;this.keys.sort(((s,a)=>("word"===t?s:this.words[s][t])>("word"===t?a:this.words[a][t])?1*e:-1*e))}saveLocal(){localStorage.setItem("stats",JSON.stringify(this.words))}loadLocal(){const t=localStorage.getItem("stats")||"[]",s=JSON.parse(t);Object.keys(s).forEach((t=>{this.words[t].trains=s[t].trains,this.words[t].correct=s[t].correct,this.words[t].wrong=s[t].wrong;const e=Number(s[t].correct),a=Number(s[t].wrong);this.words[t].percent=0|Math.trunc(e/(e+a)*100)}))}calcPercent(){this.keys.forEach((t=>{const s=Number(this.words[t].correct),e=Number(this.words[t].wrong);this.words[t].percent=0|Math.trunc(s/(s+e)*100)}))}addTrains(t){this.words[t].trains+=1,this.saveLocal()}addCorrect(t){this.words[t].correct+=1,this.calcPercent(),this.saveLocal()}addWrong(t){this.words[t].wrong+=1,this.calcPercent(),this.saveLocal()}},a=new class{constructor(){this.htmlPage=document.createElement("div"),this.htmlPage.classList.add("cards__page"),this.htmlPage.innerHTML='\n            <div class="nav__bar">\n                <div class="star__bar"></div>\n                <button class="start__game__button">start</button>\n            </div>\n            <div class="cards__box"></div>\n        ',this.startButton=this.htmlPage.querySelector(".start__game__button"),this.htmlStarBar=this.htmlPage.querySelector(".star__bar"),this.htmlCardBox=this.htmlPage.querySelector(".cards__box"),this.gameOverAudio=new Audio("assets/audio/game_over.mp3"),this.winAudio=new Audio("assets/audio/win.mp3"),this.wrongAudio=new Audio("assets/audio/wrong.mp3"),this.correctAudio=new Audio("assets/audio/correct.mp3"),this.htmlContainer=null,this.correctCallback=null,this.wrongCallback=null,this.trainsCallback=null,this.gameMode=!1,this.isHasWrong=!1,this.cards=[],this.gameCards=[],this.startButton.onclick=this.startGame.bind(this)}appendTo(t){t.appendChild(this.htmlPage)}createCards(t){t.words.forEach((e=>{const a=new s(e.eng,e.rus,t.category,e.pic,e.audio,t.color,t.subcolor);a.appendTo(this.htmlCardBox),this.cards.push(a),this.gameMode?(a.toggleMode(),a.setCallback(this.checkAnswer.bind(this))):a.setCallback(this.trainsCallback.bind(this))})),this.htmlContainer&&this.appendTo(this.htmlContainer)}reset(){this.htmlStarBar.innerHTML="",this.isHasWrong=!1,this.gameCards=[],this.startButton.textContent="start"}clearPage(){this.htmlContainer.innerHTML="",this.htmlCardBox.innerHTML="",this.htmlStarBar.innerHTML="",this.cards=[]}toggleGameMode(){this.gameMode=!this.gameMode,this.gameMode?(this.startButton.classList.add("start__game__button-show"),this.startButton.disabled=!1,this.cards.forEach((t=>{t.toggleMode(),t.setCallback(this.checkAnswer.bind(this))}))):(this.startButton.classList.remove("start__game__button-show"),this.startButton.disabled=!0,this.cards.forEach((t=>{t.toggleMode(),t.activate(),t.setCallback(this.trainsCallback.bind(this))})),this.reset())}createGameWords(){this.gameCards=[];const t=[...this.cards];for(;t.length>0;){const s=Math.trunc(Math.random()*t.length);this.gameCards.push(t[s]),t.splice(s,1)}}startGame(){0===this.gameCards.length?(this.createGameWords(),this.startButton.textContent="repeat",this.sayWord()):this.sayWord()}sayWord(){this.gameCards[this.gameCards.length-1].setIsSound(!0),this.gameCards[this.gameCards.length-1].playSound(),this.gameCards[this.gameCards.length-1].setIsSound(!1)}nextWord(){this.gameCards.pop(),this.gameCards.length>0?this.sayWord():(this.startButton.textContent="start",this.gameOver())}gameOver(){this.isHasWrong?(this.gameOverAudio.play(),window.location="#lose"):(this.winAudio.play(),window.location="#win"),setTimeout((()=>{window.location="#home"}),3500)}checkAnswer(t){if(this.gameCards.length>0){const s=this.gameCards[this.gameCards.length-1].word;s===t?(this.correctAudio.play(),this.gameCards[this.gameCards.length-1].deactivate(),this.addStar("smile"),this.correctCallback(s),setTimeout(this.nextWord.bind(this),1200)):(this.isHasWrong=!0,this.wrongAudio.play(),this.addStar("sad"),this.wrongCallback(s))}}addStar(t){let s;const e=document.createElement("div");e.classList.add("star__bar-star"),s="smile"===t?"assets/images/funny_star.png":"assets/images/sad_star.png",e.innerHTML=`<img src="${s}" alt="star">`,this.htmlStarBar.appendChild(e),setTimeout((()=>{this.htmlStarBar.scrollLeft=9999999}),300)}async loadCards(t){this.clearPage(),this.reset(),(await fetch("assets/cards.json").then((t=>t.json())).then((t=>t))).forEach((s=>{if("repeat"===t.category){const t=localStorage.getItem("repeat")||"[]",e=JSON.parse(t),a={category:"repeat",color:"#edd5af",subcolor:"#e9b289",words:[]};s.words.forEach((t=>{e.includes(t.eng)&&a.words.push(t)})),this.createCards(a)}else s.category===t.category&&this.createCards(s)}))}},i=document.querySelector(".container");a.htmlContainer=i,a.correctCallback=e.addCorrect.bind(e),a.wrongCallback=e.addWrong.bind(e),a.trainsCallback=e.addTrains.bind(e);const r=[new t("home","home.html",!0),new t("cards",a.loadCards.bind(a)),new t("stats",e.loadPage.bind(e)),new t("statistic","statistic.html"),new t("win","win.html"),new t("lose","lose.html")];new class{constructor(t){this.routes=t,this.container=document.querySelector(".container")}start(){window.addEventListener("hashchange",(()=>{this.hasChanged(this,this.routes)})),this.hasChanged(this,this.routes)}hasChanged(){if(window.location.hash.length>0)for(let t=0;t<this.routes.length;t++){const s=this.routes[t];if(s.isActiveRoute(window.location.hash)){this.goToRoute(s.html,s.getParams(window.location.hash));break}}else for(let t=0;t<this.routes.length;t++){const s=this.routes[t];if(s.default){this.goToRoute(s.html);break}}}clearContainer(){for(;this.container.firstChild;)this.container.removeChild(this.container.lastChild)}goToRoute(t,s){this.clearContainer(),"function"==typeof t?t(s):fetch(`views/${t}`).then((t=>t.text())).then((t=>this.container.innerHTML=t))}}(r).start();const o=document.querySelector("#train_switch");o.checked=!0,o.addEventListener("click",(()=>{a.toggleGameMode()}));const n=document.querySelector(".nav-icon"),d=new class{constructor(){this.menu=document.createElement("div"),this.menu.classList.add("menu"),this.isShow=!1,this.tintScreen=document.createElement("div"),this.tintScreen.classList.add("tint__screen"),this.loadCategories(),this.tintScreen.addEventListener("click",this.hide.bind(this))}createMenu(t){let s='<ul>\n                    <a href="#home"><li>\n                       <div class="menu-icon"><img src="assets/images/home.png" alt="icon"></div>\n                       home\n                     </li></a>\n                   ';t.forEach((t=>{s+=`            \n              <a href="#cards?category=${t.category}"><li>\n                <div class="menu-icon"><img src="assets/images/${t.icon}" alt="icon"></div>\n                ${t.category.replace("_"," ")}\n              </li></a>            \n            `})),s+='<a href="#stats"><li>\n                    <div class="menu-icon"><img src="assets/images/app_stats.png" alt="icon"></div>\n                        statistics\n                </li></a></ul>',this.menu.innerHTML=s,document.body.appendChild(this.menu),this.links=document.querySelectorAll("a"),this.links.forEach((t=>t.addEventListener("click",this.hide.bind(this))))}async loadCategories(){const t=await fetch("assets/cards.json").then((t=>t.json())).then((t=>t));this.createMenu(t)}show(){document.querySelector(".nav-icon").classList.add("nav-icon-hover"),this.isShow=!0,document.body.appendChild(this.tintScreen),this.menu.classList.add("menu-show")}hide(){document.querySelector(".nav-icon").classList.remove("nav-icon-hover"),this.isShow=!1,document.body.removeChild(this.tintScreen),this.menu.classList.remove("menu-show")}};n.addEventListener("click",(()=>{d.isShow?d.hide():d.show()}))})();